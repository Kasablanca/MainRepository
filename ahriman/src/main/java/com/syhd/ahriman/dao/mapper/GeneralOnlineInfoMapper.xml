<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.syhd.ahriman.dao.mapper.GeneralOnlineInfoMapper">
	<resultMap id="BaseResultMap"
		type="com.syhd.ahriman.dao.model.GeneralOnlineInfo">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="date" jdbcType="TIMESTAMP" property="date" />
		<result column="server_id" jdbcType="INTEGER"
			property="serverId" />
		<result column="platform" jdbcType="VARCHAR"
			property="platform" />
		<result column="total_duration" jdbcType="BIGINT"
			property="totalDuration" />
		<result column="max_online" jdbcType="INTEGER"
			property="maxOnline" />
		<result column="liveness" jdbcType="INTEGER"
			property="liveness" />
		<result column="login_count" jdbcType="INTEGER"
			property="loginCount" />
		<result column="new_player_count" jdbcType="INTEGER"
			property="newPlayerCount" />
		<result column="back_user_count" jdbcType="INTEGER"
			property="backUserCount" />
		<result column="total_duration_new" jdbcType="INTEGER"
			property="totalDurationNew" />
	</resultMap>
	<sql id="Base_Column_List">
		id, date, server_id, platform, total_duration, max_online, liveness,
		login_count,
		new_player_count, back_user_count, total_duration_new
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_general_online_info
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from t_general_online_info
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.syhd.ahriman.dao.model.GeneralOnlineInfo">
		insert into t_general_online_info (id, date, server_id,
		platform, total_duration, max_online,
		liveness, login_count, new_player_count,
		back_user_count, total_duration_new)
		values (#{id,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP},
		#{serverId,jdbcType=INTEGER},
		#{platform,jdbcType=VARCHAR}, #{totalDuration,jdbcType=BIGINT}, #{maxOnline,jdbcType=INTEGER},
		#{liveness,jdbcType=INTEGER}, #{loginCount,jdbcType=INTEGER},
		#{newPlayerCount,jdbcType=INTEGER},
		#{backUserCount,jdbcType=INTEGER}, #{totalDurationNew,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.syhd.ahriman.dao.model.GeneralOnlineInfo">
		insert into t_general_online_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="date != null">
				date,
			</if>
			<if test="serverId != null">
				server_id,
			</if>
			<if test="platform != null">
				platform,
			</if>
			<if test="totalDuration != null">
				total_duration,
			</if>
			<if test="maxOnline != null">
				max_online,
			</if>
			<if test="liveness != null">
				liveness,
			</if>
			<if test="loginCount != null">
				login_count,
			</if>
			<if test="newPlayerCount != null">
				new_player_count,
			</if>
			<if test="backUserCount != null">
				back_user_count,
			</if>
			<if test="totalDurationNew != null">
				total_duration_new,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="date != null">
				#{date,jdbcType=TIMESTAMP},
			</if>
			<if test="serverId != null">
				#{serverId,jdbcType=INTEGER},
			</if>
			<if test="platform != null">
				#{platform,jdbcType=VARCHAR},
			</if>
			<if test="totalDuration != null">
				#{totalDuration,jdbcType=BIGINT},
			</if>
			<if test="maxOnline != null">
				#{maxOnline,jdbcType=INTEGER},
			</if>
			<if test="liveness != null">
				#{liveness,jdbcType=INTEGER},
			</if>
			<if test="loginCount != null">
				#{loginCount,jdbcType=INTEGER},
			</if>
			<if test="newPlayerCount != null">
				#{newPlayerCount,jdbcType=INTEGER},
			</if>
			<if test="backUserCount != null">
				#{backUserCount,jdbcType=INTEGER},
			</if>
			<if test="totalDurationNew != null">
				#{totalDurationNew,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.syhd.ahriman.dao.model.GeneralOnlineInfo">
		update t_general_online_info
		<set>
			<if test="date != null">
				date = #{date,jdbcType=TIMESTAMP},
			</if>
			<if test="serverId != null">
				server_id = #{serverId,jdbcType=INTEGER},
			</if>
			<if test="platform != null">
				platform = #{platform,jdbcType=VARCHAR},
			</if>
			<if test="totalDuration != null">
				total_duration = #{totalDuration,jdbcType=BIGINT},
			</if>
			<if test="maxOnline != null">
				max_online = #{maxOnline,jdbcType=INTEGER},
			</if>
			<if test="liveness != null">
				liveness = #{liveness,jdbcType=INTEGER},
			</if>
			<if test="loginCount != null">
				login_count = #{loginCount,jdbcType=INTEGER},
			</if>
			<if test="newPlayerCount != null">
				new_player_count = #{newPlayerCount,jdbcType=INTEGER},
			</if>
			<if test="backUserCount != null">
				back_user_count = #{backUserCount,jdbcType=INTEGER},
			</if>
			<if test="totalDurationNew != null">
				total_duration_new = #{totalDurationNew,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.syhd.ahriman.dao.model.GeneralOnlineInfo">
		update t_general_online_info
		set date = #{date,jdbcType=TIMESTAMP},
		server_id = #{serverId,jdbcType=INTEGER},
		platform = #{platform,jdbcType=VARCHAR},
		total_duration = #{totalDuration,jdbcType=BIGINT},
		max_online = #{maxOnline,jdbcType=INTEGER},
		liveness = #{liveness,jdbcType=INTEGER},
		login_count = #{loginCount,jdbcType=INTEGER},
		new_player_count = #{newPlayerCount,jdbcType=INTEGER},
		back_user_count = #{backUserCount,jdbcType=INTEGER},
		total_duration_new = #{totalDurationNew,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="getStatistic" resultType="com.syhd.ahriman.dto.GeneralOnlineInfoVO">
		SELECT * FROM (
			SELECT
				date,
				IFNULL(sum(total_duration/1440),0) totalDuration,
				IFNULL(max(max_online),0) maxOnline,
				IFNULL(sum(liveness),0) liveness,
				IFNULL(sum(login_count),0) loginCount,
				IFNULL(sum(login_count)/sum(liveness),0) loginCountAvg,
				IFNULL(sum(new_player_count),0) newPlayerCount,
				IFNULL(sum(back_user_count),0) backUserCount,
				IFNULL(sum(total_duration)/sum(liveness),0) onlineTimeAvg,
				IFNULL(sum(total_duration_new),0) totalDurationNew,
				IFNULL(sum(total_duration)-sum(total_duration_new),0) totalDurationOld
			FROM
				t_general_online_info
			where date &gt;= #{param.start} and date &lt; #{param.end}
			<if test="param.platform != null and param.platform.length &gt; 0">
				and platform in
				<trim prefix="(" suffix=")" suffixOverrides=",">
					<foreach collection="param.platform" item="item">
						#{item},
					</foreach>
				</trim>
			</if>
			<if test="param.serverId != null and param.serverId.length &gt; 0">
				and server_id in
				<trim prefix="(" suffix=")" suffixOverrides=",">
					<foreach collection="param.serverId" item="item">
						#{item},
					</foreach>
				</trim>
			</if>
			group by date
		) t
		order by ${pageAndSort.field} ${pageAndSort.sord}
		limit ${(pageAndSort.page-1)*pageAndSort.limit},${pageAndSort.limit}
	</select>
	<select id="getStatisticCount" resultType="long">
		select count(distinct date)
		from t_general_online_info
		where date &gt;= #{param.start} and date &lt; #{param.end}
		<if test="param.platform != null and param.platform.length &gt; 0">
			and platform in
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<foreach collection="param.platform" item="item">
					#{item},
				</foreach>
			</trim>
		</if>
		<if test="param.serverId != null and param.serverId.length &gt; 0">
			and server_id in
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<foreach collection="param.serverId" item="item">
					#{item},
				</foreach>
			</trim>
		</if>
	</select>
	<select id="getStatisticWithUserRegistered" resultType="com.syhd.ahriman.dto.GeneralOnlineInfoVO">
		SELECT * FROM (
			SELECT
				t1.date,
				IFNULL(sum(t2.total_duration/1440),0) totalDuration,
				IFNULL(max(t2.max_online),0) maxOnline,
				IFNULL(sum(t2.liveness),0) liveness,
				IFNULL(sum(t2.login_count),0) loginCount,
				IFNULL(sum(t2.login_count)/sum(t2.liveness),0) loginCountAvg,
				IFNULL(sum(t2.new_player_count),0) newPlayerCount,
				IFNULL(sum(t1.dailyRegistered),0) newUserCount,
				IFNULL(sum(t2.back_user_count),0) backUserCount,
				IFNULL(sum(t2.total_duration)/sum(t2.liveness),0) onlineTimeAvg,
				IFNULL(sum(t2.total_duration_new),0) totalDurationNew,
				IFNULL(sum(t2.total_duration)-sum(t2.total_duration_new),0) totalDurationOld
			FROM (
				SELECT date,sum(dailyRegistered) dailyRegistered
				FROM (
					SELECT t1.date,t2.platform,max(t2.daily_registered) dailyRegistered 
					FROM t_date t1
					LEFT JOIN t_user_registered t2 ON t2.date &lt; t1.date
					WHERE 1 = 1
					<if test="param.platform != null and param.platform.length &gt; 0">
						AND platform in
						<trim prefix="(" suffix=")" suffixOverrides=",">
							<foreach collection="param.platform" item="item">
								#{item},
							</foreach>
						</trim>
					</if>
					GROUP BY t1.date,t2.platform
				) t
				GROUP BY date
			) t1
			LEFT JOIN t_general_online_info t2 ON t1.date = t2.date
			where t2.date &gt;= #{param.start} and t2.date &lt; #{param.end}
			<if test="param.platform != null and param.platform.length &gt; 0">
				and t2.platform in
				<trim prefix="(" suffix=")" suffixOverrides=",">
					<foreach collection="param.platform" item="item">
						#{item},
					</foreach>
				</trim>
			</if>
			group by date
		) t
		order by ${pageAndSort.field} ${pageAndSort.sord}
		limit ${(pageAndSort.page-1)*pageAndSort.limit},${pageAndSort.limit}
	</select>
	<select id="getStatisticCountWithUserRegistered" resultType="long">
		select count(date)
		from t_date
		where date &gt;= #{param.start} and date &lt; #{param.end}
	</select>
	<select id="getAllPlatform" resultType="string">
		select distinct platform from t_general_online_info
	</select>
	<select id="getLastCountDate" resultType="java.util.Date">
		select max(date) from t_general_online_info where server_id = #{serverId}
	</select>
	<insert id="batchInsert">
		insert into ${storedTable} (date, server_id, platform, total_duration, max_online, liveness,
		login_count,
		new_player_count, back_user_count, total_duration_new) 
		values <trim suffixOverrides=",">
			<foreach collection="records" item="record">
				(#{record.date,jdbcType=TIMESTAMP},#{record.serverId,jdbcType=INTEGER},
				 #{record.platform,jdbcType=VARCHAR}, #{record.totalDuration,jdbcType=BIGINT}, 
				 #{record.maxOnline,jdbcType=INTEGER},#{record.liveness,jdbcType=INTEGER}, 
				 #{record.loginCount,jdbcType=INTEGER},#{record.newPlayerCount,jdbcType=INTEGER},
				 #{record.backUserCount,jdbcType=INTEGER}, #{record.totalDurationNew,jdbcType=INTEGER}),
			</foreach>
		</trim>
	</insert>
</mapper>