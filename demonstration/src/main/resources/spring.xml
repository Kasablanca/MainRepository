<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd ">
	
	<context:component-scan 
		base-package="cn.lm.service.impl,cn.lm.other,cn.lm.event,cn.lm.aspect,cn.lm.message" />
	
	<context:property-placeholder location="classpath:db.properties" />
	
	<cache:annotation-driven />
	
	<import resource="spring-remote.xml"/>
	<import resource="spring-redis.xml"/>
	<import resource="spring-activemq.xml"/>

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter" />
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${url}" />
		<property name="username" value="${db_user}" />
		<property name="password" value="${password}" />
		<property name="maxActive" value="20" />
		<property name="filters" value="stat,wall" />
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter" />
			</list>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="typeAliasesPackage" value="cn.lm.model" />
	</bean>
	
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="transactionAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="transactionPointcut" expression="execution(* cn.lm.service.impl.*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.lm.mapper"></property>
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="httpComponentsClientHttpRequestFactory" />
	</bean>
	
	<bean id="httpComponentsClientHttpRequestFactory" 
		class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
	</bean>
	
	
</beans>