<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.min.someapp.dao.mapper.LoggingEventExceptionMapper">
	<resultMap id="BaseResultMap"
		type="com.min.someapp.dao.model.LoggingEventException">
		<id column="event_id" jdbcType="BIGINT" property="eventId" />
		<id column="i" jdbcType="SMALLINT" property="i" />
		<result column="trace_line" jdbcType="VARCHAR" property="traceLine" />
	</resultMap>
	<sql id="Base_Column_List">
		event_id, i, trace_line
	</sql>
	<select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from logging_event_exception
		where event_id = #{eventId,jdbcType=BIGINT}
		and i = #{i,jdbcType=SMALLINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="map">
		delete from logging_event_exception
		where event_id = #{eventId,jdbcType=BIGINT}
		and i = #{i,jdbcType=SMALLINT}
	</delete>
	<insert id="insert" parameterType="com.min.someapp.dao.model.LoggingEventException">
		insert into logging_event_exception (event_id, i, trace_line
		)
		values (#{eventId,jdbcType=BIGINT}, #{i,jdbcType=SMALLINT},
		#{traceLine,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.min.someapp.dao.model.LoggingEventException">
		insert into logging_event_exception
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="eventId != null">
				event_id,
			</if>
			<if test="i != null">
				i,
			</if>
			<if test="traceLine != null">
				trace_line,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="eventId != null">
				#{eventId,jdbcType=BIGINT},
			</if>
			<if test="i != null">
				#{i,jdbcType=SMALLINT},
			</if>
			<if test="traceLine != null">
				#{traceLine,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.min.someapp.dao.model.LoggingEventException">
		update logging_event_exception
		<set>
			<if test="traceLine != null">
				trace_line = #{traceLine,jdbcType=VARCHAR},
			</if>
		</set>
		where event_id = #{eventId,jdbcType=BIGINT}
		and i = #{i,jdbcType=SMALLINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.min.someapp.dao.model.LoggingEventException">
		update logging_event_exception
		set trace_line = #{traceLine,jdbcType=VARCHAR}
		where event_id = #{eventId,jdbcType=BIGINT}
		and i = #{i,jdbcType=SMALLINT}
	</update>
	<select id="getRecordList" resultType="com.min.someapp.dao.model.LoggingEventException">
		select * from (
			select event_id eventId,i,trace_line traceLine 
			from logging_event_exception 
			where event_id = #{eventId}
		) t
		order by i asc
	</select>
</mapper>