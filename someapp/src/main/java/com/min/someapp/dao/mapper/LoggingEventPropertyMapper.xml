<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.min.someapp.dao.mapper.LoggingEventPropertyMapper">
	<resultMap id="BaseResultMap"
		type="com.min.someapp.dao.model.LoggingEventProperty">
		<id column="event_id" jdbcType="BIGINT" property="eventId" />
		<id column="mapped_key" jdbcType="VARCHAR" property="mappedKey" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.min.someapp.dao.model.LoggingEventProperty">
		<result column="mapped_value" jdbcType="LONGVARCHAR" property="mappedValue" />
	</resultMap>
	<sql id="Base_Column_List">
		event_id, mapped_key
	</sql>
	<sql id="Blob_Column_List">
		mapped_value
	</sql>
	<select id="selectByPrimaryKey" parameterType="map"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from logging_event_property
		where event_id = #{eventId,jdbcType=BIGINT}
		and mapped_key = #{mappedKey,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="map">
		delete from logging_event_property
		where event_id = #{eventId,jdbcType=BIGINT}
		and mapped_key = #{mappedKey,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.min.someapp.dao.model.LoggingEventProperty">
		insert into logging_event_property (event_id, mapped_key, mapped_value
		)
		values (#{eventId,jdbcType=BIGINT}, #{mappedKey,jdbcType=VARCHAR},
		#{mappedValue,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.min.someapp.dao.model.LoggingEventProperty">
		insert into logging_event_property
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="eventId != null">
				event_id,
			</if>
			<if test="mappedKey != null">
				mapped_key,
			</if>
			<if test="mappedValue != null">
				mapped_value,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="eventId != null">
				#{eventId,jdbcType=BIGINT},
			</if>
			<if test="mappedKey != null">
				#{mappedKey,jdbcType=VARCHAR},
			</if>
			<if test="mappedValue != null">
				#{mappedValue,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.min.someapp.dao.model.LoggingEventProperty">
		update logging_event_property
		<set>
			<if test="mappedValue != null">
				mapped_value = #{mappedValue,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where event_id = #{eventId,jdbcType=BIGINT}
		and mapped_key = #{mappedKey,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.min.someapp.dao.model.LoggingEventProperty">
		update logging_event_property
		set mapped_value = #{mappedValue,jdbcType=LONGVARCHAR}
		where event_id = #{eventId,jdbcType=BIGINT}
		and mapped_key = #{mappedKey,jdbcType=VARCHAR}
	</update>
	<select id="getRecordList" resultType="com.min.someapp.dao.model.LoggingEventProperty">
		select * from (
			select event_id eventId,mapped_key mappedKey,mapped_value mappedValue 
			from logging_event_property 
			where event_id = #{eventId}
		) t
		order by ${sort.field} ${sort.sord}
	</select>
</mapper>